<?php

namespace AdminBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * ArenaContestStyle
 * @ORM\Table(name="arena_contest_style")
 * @ORM\Entity(repositoryClass="AdminBundle\Repository\ArenaContestStyleRepository")
 */
class ArenaContestStyle
{
    /**
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\Column(type="integer")
     * @Assert\Range(min="0", max="100")
     * @Assert\NotNull()
     */
    private $splendorValue  = 50;

    /**
     * @ORM\Column(type="integer")
     * @Assert\Range(min="0", max="100")
     * @Assert\NotNull()
     */
    private $classicValue   = 50;

    /**
     * @ORM\Column(type="integer")
     * @Assert\Range(min="0", max="100")
     * @Assert\NotNull()
     */
    private $seriousValue   = 50;

    /**
     * @ORM\Column(type="integer")
     * @Assert\Range(min="0", max="100")
     * @Assert\NotNull()
     */
    private $delicateValue  = 50;

    /**
     * @ORM\Column(type="integer")
     * @Assert\Range(min="0", max="100")
     * @Assert\NotNull()
     */
    private $economicValue  = 50;

    /**
     * @ORM\Column(type="integer")
     * @Assert\Range(min="0", max="100")
     * @Assert\NotNull()
     */
    private $youthValue     = 50;

    /**
     * @ORM\Column(type="integer")
     * @Assert\Range(min="0", max="100")
     * @Assert\NotNull()
     */
    private $literalValue   = 50;
    
    /**
     * @ORM\OneToOne(targetEntity="AdminBundle\Entity\ArenaContest", inversedBy="arenaContestStyle")
     * @ORM\JoinColumn(onDelete="CASCADE")
     */
    private $arenaContest;

    public function __construct()
    {
        
    }


    /**
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }



    /**
     * Set arenaContest
     *
     * @param \AdminBundle\Entity\ArenaContest $arenaContest
     *
     * @return ArenaContestStyle
     */
    public function setArenaContest(\AdminBundle\Entity\ArenaContest $arenaContest = null)
    {
        $this->arenaContest = $arenaContest;
        return $this;
    }

    /**
     * Get arenaContest
     *
     * @return \AdminBundle\Entity\ArenaContest
     */
    public function getArenaContest()
    {
        return $this->arenaContest;
    }

    /**
     * Set splendorValue
     *
     * @param integer $splendorValue
     *
     * @return ArenaContestStyle
     */
    public function setSplendorValue($splendorValue)
    {
        $this->splendorValue = $splendorValue;

        return $this;
    }

    /**
     * Get splendorValue
     *
     * @return integer
     */
    public function getSplendorValue()
    {
        return $this->splendorValue;
    }

    /**
     * Set classicValue
     *
     * @param integer $classicValue
     *
     * @return ArenaContestStyle
     */
    public function setClassicValue($classicValue)
    {
        $this->classicValue = $classicValue;

        return $this;
    }

    /**
     * Get classicValue
     *
     * @return integer
     */
    public function getClassicValue()
    {
        return $this->classicValue;
    }

    /**
     * Set seriousValue
     *
     * @param integer $seriousValue
     *
     * @return ArenaContestStyle
     */
    public function setSeriousValue($seriousValue)
    {
        $this->seriousValue = $seriousValue;

        return $this;
    }

    /**
     * Get seriousValue
     *
     * @return integer
     */
    public function getSeriousValue()
    {
        return $this->seriousValue;
    }

    /**
     * Set delicateValue
     *
     * @param integer $delicateValue
     *
     * @return ArenaContestStyle
     */
    public function setDelicateValue($delicateValue)
    {
        $this->delicateValue = $delicateValue;

        return $this;
    }

    /**
     * Get delicateValue
     *
     * @return integer
     */
    public function getDelicateValue()
    {
        return $this->delicateValue;
    }

    /**
     * Set economicValue
     *
     * @param integer $economicValue
     *
     * @return ArenaContestStyle
     */
    public function setEconomicValue($economicValue)
    {
        $this->economicValue = $economicValue;

        return $this;
    }

    /**
     * Get economicValue
     *
     * @return integer
     */
    public function getEconomicValue()
    {
        return $this->economicValue;
    }

    /**
     * Set youthValue
     *
     * @param integer $youthValue
     *
     * @return ArenaContestStyle
     */
    public function setYouthValue($youthValue)
    {
        $this->youthValue = $youthValue;

        return $this;
    }

    /**
     * Get youthValue
     *
     * @return integer
     */
    public function getYouthValue()
    {
        return $this->youthValue;
    }

    /**
     * Set literalValue
     *
     * @param integer $literalValue
     *
     * @return ArenaContestStyle
     */
    public function setLiteralValue($literalValue)
    {
        $this->literalValue = $literalValue;

        return $this;
    }

    /**
     * Get literalValue
     *
     * @return integer
     */
    public function getLiteralValue()
    {
        return $this->literalValue;
    }
}
