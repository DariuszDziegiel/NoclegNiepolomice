<?php

namespace AdminBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * ArenaContestParticipation
 * @ORM\Table(name="arena_contest_participation")
 * @ORM\Entity(repositoryClass="AdminBundle\Repository\ArenaContestParticipationRepository")
 */
class ArenaContestParticipation
{
    /**
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * Arena Contest
     * @ORM\ManyToOne(targetEntity="AdminBundle\Entity\ArenaContest", inversedBy="arenaContestParticipations")
     * @ORM\JoinColumn(onDelete="CASCADE")
     */
    private $arenaContest;

    /**
     * Contest author user
     * @ORM\ManyToOne(targetEntity="AdminBundle\Entity\User", inversedBy="arenaContestParticipations")
     * @ORM\JoinColumn(onDelete="CASCADE")
     */
    private $author;
    

    /**
     * @ORM\Column(name="filename", type="string")
     * @Assert\NotBlank(message="Wybierz grafikę do przesłania.")
     * @Assert\Image(maxSize="5M")
     */
    private $filename;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    private $originalFilename;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $extension;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $mimeType;

    /**
     * @ORM\Column(type="integer", columnDefinition="INTEGER NOT NULL DEFAULT 0")
     */
    private $votesTotal = 0;

    /**
     * @ORM\Column(type="boolean")
     */
    private $isActive = true;

    /**
     * @ORM\Column(type="boolean", columnDefinition="TINYINT(1) UNSIGNED NOT NULL DEFAULT 0")
     */
    private $isWinner = false;


    /**
     * @ORM\Column(type="datetime", nullable=false)
     * @Gedmo\Timestampable(on="create")
     */
    protected $createdAt;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     * @Gedmo\Timestampable(on="update")
     */
    protected $updatedAt;

    public function __construct()
    {
        
    }

    /**
     * Get id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set filename
     *
     * @param string $filename
     *
     * @return ArenaContestParticipation
     */
    public function setFilename($filename)
    {
        $this->filename = $filename;

        return $this;
    }

    /**
     * Get filename
     *
     * @return string
     */
    public function getFilename()
    {
        return $this->filename;
    }

    /**
     * Set originalFilename
     *
     * @param string $originalFilename
     *
     * @return ArenaContestParticipation
     */
    public function setOriginalFilename($originalFilename)
    {
        $this->originalFilename = $originalFilename;

        return $this;
    }

    /**
     * Get originalFilename
     *
     * @return string
     */
    public function getOriginalFilename()
    {
        return $this->originalFilename;
    }

    /**
     * Set extension
     *
     * @param string $extension
     *
     * @return ArenaContestParticipation
     */
    public function setExtension($extension)
    {
        $this->extension = $extension;

        return $this;
    }

    /**
     * Get extension
     *
     * @return string
     */
    public function getExtension()
    {
        return $this->extension;
    }

    /**
     * Set mimeType
     *
     * @param string $mimeType
     *
     * @return ArenaContestParticipation
     */
    public function setMimeType($mimeType)
    {
        $this->mimeType = $mimeType;

        return $this;
    }

    /**
     * Get mimeType
     *
     * @return string
     */
    public function getMimeType()
    {
        return $this->mimeType;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     *
     * @return ArenaContestParticipation
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     *
     * @return ArenaContestParticipation
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Set arenaContest
     *
     * @param \AdminBundle\Entity\ArenaContest $arenaContest
     *
     * @return ArenaContestParticipation
     */
    public function setArenaContest(\AdminBundle\Entity\ArenaContest $arenaContest = null)
    {
        $this->arenaContest = $arenaContest;

        return $this;
    }

    /**
     * Get arenaContest
     *
     * @return \AdminBundle\Entity\ArenaContest
     */
    public function getArenaContest()
    {
        return $this->arenaContest;
    }

    /**
     * Set author
     *
     * @param \AdminBundle\Entity\User $author
     *
     * @return ArenaContestParticipation
     */
    public function setAuthor(\AdminBundle\Entity\User $author = null)
    {
        $this->author = $author;

        return $this;
    }

    /**
     * Get author
     *
     * @return \AdminBundle\Entity\User
     */
    public function getAuthor()
    {
        return $this->author;
    }

    /**
     * Set votesTotal
     *
     * @param integer $votesTotal
     *
     * @return ArenaContestParticipation
     */
    public function setVotesTotal($votesTotal)
    {
        $this->votesTotal = $votesTotal;

        return $this;
    }

    /**
     * Get votesTotal
     *
     * @return integer
     */
    public function getVotesTotal()
    {
        return $this->votesTotal;
    }

    /**
     * Set isActive
     *
     * @param boolean $isActive
     *
     * @return ArenaContestParticipation
     */
    public function setIsActive($isActive)
    {
        $this->isActive = $isActive;

        return $this;
    }

    /**
     * Get isActive
     *
     * @return boolean
     */
    public function getIsActive()
    {
        return $this->isActive;
    }

    /**
     * Set isWinner
     *
     * @param boolean $isWinner
     *
     * @return ArenaContestParticipation
     */
    public function setIsWinner($isWinner)
    {
        $this->isWinner = $isWinner;

        return $this;
    }

    /**
     * Get isWinner
     *
     * @return boolean
     */
    public function getIsWinner()
    {
        return $this->isWinner;
    }
}
