<?php

namespace ReservationBundle\Repository;
use ReservationBundle\Entity\ReservationBlockedDate;
use ReservationBundle\Utils\DatesPeriod;

/**
 * CmsReservationBlockedDateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReservationBlockedDateRepository extends \Doctrine\ORM\EntityRepository
{
    
    /**
     * Get all dates from given period 
     * @param DatesPeriod $datesPeriod
     * @return array
     */
    public function getAllReservationBlockedDates(DatesPeriod $datesPeriod)
    {
        $qb = $this->createQueryBuilder('rbd')
            ->select('rbd')
            ->where('rbd.date >= :date_from')
            ->andWhere('rbd.date <= :date_to')
            ->setParameters([
                ':date_from' => $datesPeriod->getDateFrom(),
                ':date_to'   => $datesPeriod->getDateTo()
            ]);
        return $qb->getQuery()->getResult();
    }

    /**
     * @param \DateTime $date
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneByDate(\DateTime $date) {
        $qb = $this->createQueryBuilder('rbd')
            ->where('rbd.date = :date')
            ->setParameter('date', $date);
        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Create new blocked date
     * @param \DateTime $date
     */
    public function insertNewDate(\DateTime $date)
    {
        $newDate = new ReservationBlockedDate();
        $newDate->setDate($date);
        $newDate->setCreatedAt(new \DateTime());

        $this->_em->persist($newDate);
        $this->_em->flush();
    }

    /**
     * @param \DateTime $date
     */
    public function changeDateStatus(\DateTime $date)
    {
        $blockedDate = $this->findOneByDate($date);
        if ($blockedDate) {
            $this->_em->remove($blockedDate);
            $this->_em->flush();
        } else {
            $this->insertNewDate($date);
        }
    }


}
