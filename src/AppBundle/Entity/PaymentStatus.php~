<?php

namespace AppBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * PaymentStatus
 * @ORM\Table(name="payment_status")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\PaymentStatusRepository")
 * @UniqueEntity("code")
 */
class PaymentStatus
{
    /**
     * @ORM\Column(name="id", type="smallint", columnDefinition="TINYINT(1) UNSIGNED")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\Column(type="string", columnDefinition="VARCHAR(255) NOT NULL")
     */
    private $code;
    
    /**
     * @ORM\Column(type="string", columnDefinition="VARCHAR(255) NOT NULL")
     */
    private $title;
    
    /**
     * @ORM\OneToMany(targetEntity="AdminBundle\Entity\ArenaContest", mappedBy="paymentStatus")
     */
    private $arenaContests;
    
    public function __construct()
    {
        $this->arenaContests = new ArrayCollection();
    }

    /**
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set code
     * @param string $code
     * @return PaymentStatus
     */
    public function setCode($code)
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Get code
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Set title
     *
     * @param string $title
     *
     * @return PaymentStatus
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Add arenaContest
     *
     * @param \AdminBundle\Entity\ArenaContest $arenaContest
     *
     * @return PaymentStatus
     */
    public function addArenaContest(\AdminBundle\Entity\ArenaContest $arenaContest)
    {
        $this->arenaContests[] = $arenaContest;

        return $this;
    }

    /**
     * Remove arenaContest
     *
     * @param \AdminBundle\Entity\ArenaContest $arenaContest
     */
    public function removeArenaContest(\AdminBundle\Entity\ArenaContest $arenaContest)
    {
        $this->arenaContests->removeElement($arenaContest);
    }

    /**
     * Get arenaContests
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getArenaContests()
    {
        return $this->arenaContests;
    }
}
