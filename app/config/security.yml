# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        db_user_provider:
            entity:
                class: AdminBundle\Entity\User
                property: username
                # if you're using multiple entity managers
                # manager_name: customer
                #$2y$12$tN6lTucpj1BwdLysLd6K5uHTuHKLJ9iln3Yq4lTg3NBkfzaQ1GUEu
    encoders:
        #in_memory:
            #class: Symfony\Component\Security\Core\User\User
            #algorithm: bcrypt
            #cost: 15
            #iterations: 100
            #encode_as_base64: false
        db_user_provider:
            class: AdminBundle\Entity\User
            algorithm: bcrypt
            cost: 15
            iterations: 100
            encode_as_base64: false
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin_area:
            pattern: ^/admin
            provider: db_user_provider
            anonymous: ~
            #http_basic: ~
            form_login:
                login_path: /admin/login
                check_path: /admin/login
                csrf_token_generator: security.csrf.token_manager
                post_only:      true
                remember_me:    false
            logout:
                path:    /admin/logout
                target:  /admin/login
                #invalidate_session: true
        #users_area:
            #pattern:    ^/
            #anonymous:  ~
            #form_login:
                #check_path:   /user/login
                #login_path:   /user/login
                #remember_me:  true
                #use_referer: true
                #failure_handler: app.authentication_handler
            #logout:
                #path:   /user/logout
                #target: /
                #success_handler: app.authentication_handler
        main:
            pattern:    ^/
            anonymous:  ~
    access_control:
            #default Roles: IS_AUTHENTICATED_FULLY, IS_AUTHENTICATED_REMEMBERED, IS_AUTHENTICATED_FULLY, IS_AUTHENTICATED_ANONYMOUSLY
            - { path: ^/admin/login, roles: [IS_AUTHENTICATED_ANONYMOUSLY]}
            - { path: ^/admin/logout, roles: [IS_AUTHENTICATED_FULLY]}
            - { path: ^/admin, roles: [ROLE_ADMIN]}
            - { path: ^/, roles: [IS_AUTHENTICATED_ANONYMOUSLY]}
    role_hierarchy:
           #ROLE_ADMIN: [IS_AUTHENTICATED_ANONYMOUSLY]
           #ROLE_ORGANIZER: [ROLE_USER]
           #ROLE_AUTOR: [ROLE_USER]

